{"version":3,"sources":["serviceWorker.js","components/CounterDisplay.jsx","components/Modifier.jsx","components/Counter.jsx","components/BuildLinks.jsx","components/Header.jsx","components/About.jsx","components/Contact.jsx","components/Default.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","CounterDisplay","checkZero","num","react_default","a","createElement","className","this","props","value","Component","Modifier","state","defCheck","radioHandler","e","target","_this","setState","defaultCheck","id","onChange","changeInc","placeholder","type","val","onClick","resetState","bind","changeType","name","checked","htmlFor","Counter","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","btn1","current","innerText","btn2","cb","count","modifier","defCheckbox","changeIncrement","updateCount","btnPressed","mod","operator","safeEval","concat","formatCount","defCheckboxChecked","React","createRef","components_CounterDisplay","ref","Modifier_Modifier","BuildLinks","react_router_dom","to","link","toUpperCase","Header","links","Fragment","map","list","components_BuildLinks","key","About","Contact","Default","App","components_Header","react_router","path","component","ReactDOM","render","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e16e9ab4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\n\nclass CounterDisplay extends Component {\n  checkZero = num => {\n    return num === \"Zero!\" ? \"textZero\" : \"\";\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 className={this.checkZero(this.props.value)}>{this.props.value}</h2>\n      </div>\n    );\n  }\n}\n\nexport default CounterDisplay;\n","import React, { Component } from \"react\";\n\nexport default class Modifier extends Component {\n  state = {\n    defCheck: true\n  };\n\n  radioHandler = e => {\n    if (e.target.value === \"addSub\") {\n      this.setState({ defCheck: true });\n    } else {\n      this.setState({ defCheck: false });\n    }\n  };\n\n  defaultCheck = () => {\n    this.setState({ defCheck: true });\n  };\n\n  render() {\n    return (\n      <div className=\"change-inc\">\n        <input\n          id=\"changeValue\"\n          onChange={this.props.changeInc}\n          placeholder=\"Enter A Value..\"\n          type=\"number\"\n          value={this.props.val}\n        />\n\n        {/* RESET BUTTON */}\n        <button\n          onClick={this.props.resetState.bind(this, this.defaultCheck)}\n          id=\"resetBtn\"\n        >\n          <span>Reset</span>\n        </button>\n\n        {/* RADIO BUTTONS */}\n        <div className=\"radio-group\">\n          <div>\n            <input\n              className=\"radioBtn\"\n              id=\"addSub\"\n              value=\"addSub\"\n              onClick={this.props.changeType}\n              type=\"radio\"\n              name=\"symbol\"\n              onChange={this.radioHandler}\n              checked={this.state.defCheck}\n            />\n            <label htmlFor=\"addSub\">Add / Sub</label>\n          </div>\n          <div>\n            <input\n              className=\"radioBtn\"\n              id=\"multiDiv\"\n              value=\"multiDiv\"\n              onClick={this.props.changeType}\n              type=\"radio\"\n              name=\"symbol\"\n              checked={!this.state.defCheck}\n              onChange={this.radioHandler}\n            />\n            <label htmlFor=\"multiDiv\">Multi / Div</label>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport CounterDisplay from \"./CounterDisplay\";\nimport Modifier from \"./Modifier\";\nimport safeEval from \"safe-eval\";\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      modifier: 1,\n      defCheckboxChecked: true\n    };\n    this.btn1 = React.createRef();\n    this.btn2 = React.createRef();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>The Simple Counter!</h1>\n        <CounterDisplay value={this.formatCount()} />\n\n        <div className=\"btn-group\">\n          <button\n            id=\"btn1\"\n            ref={this.btn1}\n            className=\"btn\"\n            onClick={this.updateCount}\n          >\n            <span>+</span>\n          </button>\n          <button\n            id=\"btn2\"\n            ref={this.btn2}\n            className=\"btn\"\n            onClick={this.updateCount}\n          >\n            <span>-</span>\n          </button>\n        </div>\n\n        <Modifier\n          val={this.state.modifier}\n          resetState={this.resetState}\n          changeInc={this.changeIncrement}\n          changeType={this.changeType}\n          defCheckbox={this.state.defCheckboxChecked}\n        />\n      </div>\n    );\n  }\n\n  changeType = e => {\n    if (e.target.value === \"addSub\") {\n      this.btn1.current.innerText = \"+\";\n      this.btn2.current.innerText = \"-\";\n    } else if (e.target.value === \"multiDiv\") {\n      this.btn1.current.innerText = \"*\";\n      this.btn2.current.innerText = \"/\";\n    }\n  };\n\n  resetState = cb => {\n    this.setState({\n      count: 0,\n      modifier: 1,\n      defCheckbox: true\n    });\n    this.btn1.current.innerText = \"+\";\n    this.btn2.current.innerText = \"-\";\n    cb();\n  };\n\n  changeIncrement = e => {\n    this.setState({ modifier: e.target.value });\n  };\n\n  //Need to find a better solution here.. I want to avoid eval..\n  updateCount = btnPressed => {\n    const count = this.state.count;\n    const mod = this.state.modifier;\n    const operator = btnPressed.target.innerText;\n    this.setState({\n      count: safeEval(`(${count})${operator}(${mod})`)\n    });\n  };\n\n  formatCount = () => {\n    const { count } = this.state;\n    return count === 0 ? \"Zero!\" : count;\n  };\n}\n\nexport default Counter;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst BuildLinks = props => {\n  return (\n    <li>\n      <Link to={props.link}>{props.name.toUpperCase()}</Link>\n    </li>\n  );\n};\n\nexport default BuildLinks;\n","import React, { Component } from \"react\";\nimport BuildLinks from \"./BuildLinks\";\n\nclass Header extends Component {\n  state = {\n    links: [\n      { name: \"Home\", link: \"/\" },\n      { name: \"About\", link: \"/about\" },\n      { name: \"Contact\", link: \"/contact\" }\n    ]\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"navbar\">\n          <ul className=\"nav-ul\">\n            {this.state.links.map(list => {\n              return (\n                <BuildLinks key={list.name} name={list.name} link={list.link} />\n              );\n            })}\n          </ul>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nclass About extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>About</h1>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\n\nclass Contact extends Component {\n  state = {};\n  render() {\n    return <h1>Contact</h1>;\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\n\nclass Default extends Component {\n  state = {};\n  render() {\n    return <h3>Not Found</h3>;\n  }\n}\n\nexport default Default;\n","import React from \"react\";\nimport \"./App.css\";\nimport Counter from \"./components/Counter\";\nimport Header from \"./components/Header\";\nimport { Switch, Route } from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\nimport Default from \"./components/Default\";\nclass App extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path=\"/\" component={Counter} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/contact\" component={Contact} />\n\n          <Route component={Default} />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App.jsx\"\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <App />\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}